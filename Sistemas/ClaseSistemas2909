 alumnot@a37pc04:~$ systemctl status cron.service
● cron.service - Regular background program processing daemon
     Loaded: loaded (/lib/systemd/system/cron.service; enabled; vendor preset: >
     Active: active (running) since Fri 2023-09-29 15:59:27 CEST; 1h 56min ago
       Docs: man:cron(8)
   Main PID: 842 (cron)
      Tasks: 1 (limit: 18913)
     Memory: 484.0K
     CGroup: /system.slice/cron.service
             └─842 /usr/sbin/cron -f

Warning: some journal files were not opened due to insufficient permissions.
alumnot@a37pc04:~$ man cron
alumnot@a37pc04:~$ systemctl cat cron.service
# /lib/systemd/system/cron.service
[Unit]
Description=Regular background program processing daemon
Documentation=man:cron(8)
After=remote-fs.target nss-user-lookup.target

[Service]
EnvironmentFile=-/etc/default/cron
ExecStart=/usr/sbin/cron -f $EXTRA_OPTS
IgnoreSIGPIPE=false
KillMode=process
Restart=on-failure

[Install]
WantedBy=multi-user.target
alumnot@a37pc04:~$ cron -L 8
cron: can't open or create /var/run/crond.pid: Permission denied
alumnot@a37pc04:~$ cron ls
cron: can't open or create /var/run/crond.pid: Permission denied
alumnot@a37pc04:~$ crontasks ls
crontasks: orden no encontrada
alumnot@a37pc04:~$ crontabs ls

Orden «crontabs» no encontrada. Quizá quiso decir:

  la orden «crontab» del paquete deb «cron (3.0pl1-136ubuntu1)»
  la orden «crontab» del paquete deb «bcron (0.11-9)»
  la orden «crontab» del paquete deb «systemd-cron (1.5.14-2)»

Pruebe con: apt install <nombre del paquete deb>

alumnot@a37pc04:~$ crontab --help
crontab: opción incorrecta -- «-»
crontab: usage error: unrecognized option
usage:	crontab [-u user] file
	crontab [ -u user ] [ -i ] { -e | -l | -r }
		(default operation is replace, per 1003.2)
	-e	(edit user's crontab)
	-l	(list user's crontab)
	-r	(delete user's crontab)
	-i	(prompt before deleting user's crontab)
alumnot@a37pc04:~$ crontab -l
no crontab for alumnot
alumnot@a37pc04:~$ man crontab
alumnot@a37pc04:~$ man 5 crontab
alumnot@a37pc04:~$ cat /etc/crontab
# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
1🐱️7 *	* * *	ROOT    CD / && RUN-PARTS --REPORT /ETC/CRON.HOURLY
25 6	* * *	ROOT	TEST -X /USR/SBIN/ANACRON || ( CD / && RUN-PARTS --REPORT /ETC/CRON.DAILY )
47 6	* * 7	ROOT	TEST -X /USR/SBIN/ANACRON || ( CD / && RUN-PARTS --REPORT /ETC/CRON.WEEKLY )
52 6	1 * *	ROOT	TEST -X /USR/SBIN/ANACRON || ( CD / && RUN-PARTS --REPORT /ETC/CRON.MONTHLY )
#
alumnot@a37pc04:~$ cd
alumnot@a37pc04:~$ cd/
bash: cd/: No existe el archivo o el directorio
alumnot@a37pc04:~$ cd /
alumnot@a37pc04:/$ man run-parts
alumnot@a37pc04:/$ cd /etc/cron.hourly
alumnot@a37pc04:/etc/cron.hourly$ ls
alumnot@a37pc04:/etc/cron.hourly$ -l
-l: orden no encontrada
alumnot@a37pc04:/etc/cron.hourly$ cd /etc/cron.we
bash: cd: /etc/cron.we: No existe el archivo o el directorio
alumnot@a37pc04:/etc/cron.hourly$ cd /etc/cron.weekly
alumnot@a37pc04:/etc/cron.weekly$ ls
0anacron  man-db  update-notifier-common
alumnot@a37pc04:/etc/cron.weekly$ cd /etc/cron.daily
alumnot@a37pc04:/etc/cron.daily$ ls
0anacron    bsdmainutils      google-chrome  mlocate             samba
apport      cracklib-runtime  logrotate      popularity-contest  update-notifier-common
apt-compat  dpkg              man-db         quota
alumnot@a37pc04:/etc/cron.daily$ cat 0anacron
#!/bin/sh
#
# anacron's cron script
#
# This script updates anacron time stamps. It is called through run-parts
# either by anacron itself or by cron.
#
# The script is called "0anacron" to assure that it will be executed
# _before_ all other scripts.

test -x /usr/sbin/anacron || exit 0
anacron -u cron.daily
alumnot@a37pc04:/etc/cron.daily$ test -x /usr/sbin/anacron
alumnot@a37pc04:/etc/cron.daily$ ls -l /usr/sbin/anacron
-rwxr-xr-x 1 root root 39088 jul 16  2019 /usr/sbin/anacron
alumnot@a37pc04:/etc/cron.daily$ 

 
 ------------------------------
          field          allowed values
              -----          --------------
              minute         0–59
              hour           0–23
              day of month   1–31
              month          1–12 (or names, see below)
              day of week    0–7 (0 or 7 is Sun, or use names)
     string         meaning
              ------         -------
              @reboot        Run once, at startup.
              @yearly        Run once a year, "0 0 1 1 *".
              @annually      (same as @yearly)
              @monthly       Run once a month, "0 0 1 * *".
              @weekly        Run once a week, "0 0 * * 0".
              @daily         Run once a day, "0 0 * * *".
              @midnight      (same as @daily)
              @hourly        Run once an hour, "0 * * * *".
       # use /bin/bash to run commands, instead of the default /bin/sh
       SHELL=/bin/bash
       # mail any output to `paul', no matter whose crontab this is
       MAILTO=paul
       #
       # run five minutes after midnight, every day
       5 0 * * *       $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
       # run at 2:15pm on the first of every month — output mailed to paul
       15 14 1 * *     $HOME/bin/monthly
       # run at 10 pm on weekdays, annoy Joe
       0 22 * * 1-5    mail -s "It's 10pm" joe%Joe,%%Where are your kids?%
       23 0-23/2 * * * echo "run 23 minutes after midn, 2am, 4am ..., everyday"
       5 4 * * sun     echo "run at 5 after 4 every Sunday"
       0 */4 1 * mon   echo "run every 4th hour on the 1st and on every Monday"
       0 0 */2 * sun   echo "run at midn on every Sunday that's an uneven date"
       # Run on every second Saturday of the month
       0 4 8-14 * *    test $(date +\%u) -eq 6 && echo "2nd Saturday"

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
//variables de entorno

test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
if && else
-------------------------------------------------------------------
Esto en el NANO

*/2 * * * * logger -t mitarea "...mensaje mandado por mi tarea programada a las `date`"
-----------------------------------------------------

alumnot@a37pc04:/etc/cron.daily$ test -x /usr/sbin/anacron
alumnot@a37pc04:/etc/cron.daily$ ls -l /usr/sbin/anacron
-rwxr-xr-x 1 root root 39088 jul 16  2019 /usr/sbin/anacron
alumnot@a37pc04:/etc/cron.daily$ cd /etc/cron.weekly
alumnot@a37pc04:/etc/cron.weekly$ less 0anacron
alumnot@a37pc04:/etc/cron.weekly$ cat man-db
#!/bin/sh
#
# man-db cron weekly

set -e

if [ -d /run/systemd/system ]; then
    # Skip in favour of systemd timer.
    exit 0
fi

iosched_idle=
# Don't try to change I/O priority in a vserver or OpenVZ.
if ! egrep -q '(envID|VxID):.*[1-9]' /proc/self/status && \
   ([ ! -d /proc/vz ] || [ -d /proc/bc ]); then
    iosched_idle='--iosched idle'
fi

if ! [ -d /var/cache/man ]; then
    # Recover from deletion, per FHS.
    install -d -o man -g man -m 0755 /var/cache/man
fi

# regenerate man database
if [ -x /usr/bin/mandb ]; then
    # --pidfile /dev/null so it always starts; mandb isn't really a daemon,
    # but we want to start it like one.
    start-stop-daemon --start --pidfile /dev/null \
		      --startas /usr/bin/mandb --oknodo --chuid man \
		      $iosched_idle \
		      -- --quiet
fi

exit 0
alumnot@a37pc04:/etc/cron.weekly$ less man-db
alumnot@a37pc04:/etc/cron.weekly$ /etc/cron.monthly
bash: /etc/cron.monthly: Es un directorio
alumnot@a37pc04:/etc/cron.weekly$ cd /etc/cron.monthly
alumnot@a37pc04:/etc/cron.monthly$ ls
0anacron
alumnot@a37pc04:/etc/cron.monthly$ ll
total 24
drwxr-xr-x   2 root root  4096 abr 23  2020 ./
drwxr-xr-x 152 root root 12288 sep 21 10:21 ../
-rwxr-xr-x   1 root root   313 jul 16  2019 0anacron*
-rw-r--r--   1 root root   102 feb 13  2020 .placeholder
alumnot@a37pc04:/etc/cron.monthly$ crontab -e
no crontab for alumnot - using an empty one

Select an editor.  To change later, run 'select-editor'.
  1. /bin/nano        <---- easiest
  2. /usr/bin/vim.tiny
  3. /bin/ed

Choose 1-3 [1]: 
No modification made
alumnot@a37pc04:/etc/cron.monthly$ crontab -e
no crontab for alumnot - using an empty one
No modification made
alumnot@a37pc04:/etc/cron.monthly$ crontab -e
no crontab for alumnot - using an empty one
crontab: installing new crontab
alumnot@a37pc04:/etc/cron.monthly$ crontab -l
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
*/2 * * * * logger -t mitarea "...mensaje mandado por mi tarea programada a las `date`"

alumnot@a37pc04:/etc/cron.monthly$ cd /var/spool/crontabs
bash: cd: /var/spool/crontabs: No existe el archivo o el directorio
alumnot@a37pc04:/etc/cron.monthly$ cd /var/spool
alumnot@a37pc04:/var/spool$ /cron
bash: /cron: No existe el archivo o el directorio
alumnot@a37pc04:/var/spool$ cd /cron
bash: cd: /cron: No existe el archivo o el directorio
alumnot@a37pc04:/var/spool$ cd cron
alumnot@a37pc04:/var/spool/cron$ cd crontabs
bash: cd: crontabs: Permiso denegado
alumnot@a37pc04:/var/spool/cron$ 
----------------------
alumnot@a37pc04:/var/spool/cron$ crontab -r
alumnot@a37pc04:/var/spool/cron$ crontab -l
no crontab for alumnot
alumnot@a37pc04:/var/spool/cron$ 
------------------------------
OTRO DEL NANO SUUUUUUUUH
*/2 * * * * logger -t mitarea "mensaje enviado desde mi tarea a las `date`"

30 21 * * 1-5 cp /home/pablo/Documents /media/KINGSTON/apuntes
-------------------------------------

